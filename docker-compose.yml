services:
  db:
    image: postgres:16
    container_name: db_app
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - 5432:5432
    expose:
      - ${DB_PORT}
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis-cache:
    image: redis:7
    container_name: redis_cache
    environment:
      REDIS_PORT: 6379
    expose:
      - 6379
    volumes:
      - redis_cache_data:/data

  
  redis-tasks:
    image: redis:7
    container_name: redis_tasks
    environment:
      REDIS_PORT: 6379
    expose:
      - 6379
    volumes:
      - redis_tasks_data:/data

  app:
    build:
      context: .
    container_name: fastapi_app
    environment:
      APP_CONFIG__DB__HOST: ${DB_HOST}
      APP_CONFIG__DB__PORT: ${DB_PORT}
      APP_CONFIG__DB__USER: ${DB_USER}
      APP_CONFIG__DB__NAME: ${DB_NAME}
      APP_CONFIG__DB__PASSWORD: ${DB_PASSWORD}
      APP_CONFIG__ACCESS_TOKEN__RESET_PASSWORD_TOKEN_SECRET: ${ACCESS_TOKEN_RESET_PASSWORD_TOKEN_SECRET}
      APP_CONFIG__ACCESS_TOKEN__VERIFICATION_TOKEN_SECRET: ${ACCESS_TOKEN_VERIFICATION_TOKEN_SECRET}
      APP_CONFIG__REDIS__CACHE_HOST: ${REDIS_CACHE_HOST}
      APP_CONFIG__REDIS__TASKS_HOST: ${REDIS_TASKS_HOST}
      APP_CONFiG__LIFE_TIME_LINKS__WITHOUT_CLICKS: ${LIFE_TIME_LINKS_WITHOUT_CLICKS}
      APP_CONFiG__LIFE_TIME_LINKS__DEFAULT_WITH_CLICKS: ${LIFE_TIME_LINKS_DEFAULT_WITH_CLICKS}
    command: >
      sh -c "/fastapi_app/docker/app.sh & /fastapi_app/docker/celery.sh"
    ports:
      - 8000:8000
    depends_on:
      db:
        condition: service_healthy
      redis-cache:
        condition: service_started
      redis-tasks:
        condition: service_started

volumes:
  postgres_data:
  redis_cache_data:
  redis_tasks_data:
